<project name="projectOne" default="compile" basedir=".">
<description>
Build file for projectOne!
</description>
<!-- global properties for this build file -->
<property name="source.dir" location="src"/>
<property name="build.dir" location="bin"/>
<property name="doc.dir" location="doc"/>
<property name = "lib.dir" location = "lib" /> 


<!-- set up some directories used by this project -->
<target name="init" description="setup project directories">
	<mkdir dir="${build.dir}"/>
	<mkdir dir="${dist.dir}"/>
	<mkdir dir="${doc.dir}"/>
</target>

<!-- Compile the java code in src dir into build dir -->
<target name="compile" depends="init" description="compile java sources">
	<javac srcdir="${source.dir}" destdir="${build.dir}" includeantruntime = "false">
	</javac>
</target>

<!-- Generate javadocs for current project into docs dir -->
 <target name="doc" depends="init" description="create documentation">
        <javadoc sourcepath="${source.dir}" destdir="${doc.dir}" >
            <fileset dir="${source.dir}" defaultexcludes="yes">
                <exclude name="TestSearchMap"/>
                <exclude name="TestFlightMap"/>
                <exclude name="TestCity"/>
            </fileset>
        </javadoc>
 </target>

<!-- Delete the build & doc directories and Emacs backup (*~) files -->
<target name="clean" description="tidy up the workspace">
	<delete dir="build"/>
	<delete dir="dist"/>
	<delete dir="doc"/>
	 <delete>
     	<fileset defaultexcludes="no" dir="${source.dir}" includes="**/*~" />
     </delete>
</target>

<!-- Generates compilation for the files -->
 <target name="dist" depends="compile" description="jar file creation">
        <jar jarfile="${dist.dir}" basedir="${build.dir}" includes="**">
            <manifest>
                <attribute name="main-class" value="SearchMap" />
            </manifest>
        </jar>
 </target>

<!-- Generates the tests for the files -->
<target name="test" depends="compile" description="runs all the tests">
        <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
            <test name="TestSearchMap"/>
            <test name="TestFlightMap"/>
            <test name="TestCity"></test>

            <classpath refid="classPath.test" />
            <classpath>
                <pathelement location="${build.dir}"/>
            </classpath>
        </junit>
</target>


</project>
